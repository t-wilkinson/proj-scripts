#!/usr/bin/env python
import sys
import re
import unicodedata
import os


def normalize(value):
    value = unicodedata.normalize('NFKD', value).encode(
        'ascii', 'ignore').decode('ascii')
    value = re.sub(r'[^./\w\s-]', '', value.lower())

    # split by `.` and normalize each portion
    parts = []
    for ext in value.split('.'):
        ext = re.sub(r'[-\.\s]+', '-', ext).strip('-_')
        if ext:
            parts.append(ext)

    return '.'.join(parts)


def normalize_file(path):
    normalized = normalize(path)
    if path != normalized:
        os.renames(path, normalized)


if __name__ == '__main__':
    # if passing args, move files
    if len(sys.argv) > 1:
        paths = sys.argv[1:]
        for path in paths:
            if os.path.isdir(path):
                for root, dirs, files in os.walk(path):
                    for file in files:
                        normalize_file(os.path.join(root, file))

            else:
                normalize_file(path)

    # if stdin, print normalized versions of strings
    else:
        for line in sys.stdin:
            print(normalize(line))
